var tipuesearch = {"pages": [{'title': 'About', 'text': '倉儲:  2024倉儲 \n 網頁:  靜態網頁 \n 網誌:  https://41123130.github.io/cd2024/blog/ \n 簡報:  https:// 41123130.github.io/cd2024 /reveal/ \n 小組:\xa0 https://github.com/mdecd2024/2a-midag2 \n \n', 'tags': '', 'url': 'About.html'}, {'title': '每週學習進度', 'text': 'Blog進度同步靜態內容整理! \n', 'tags': '', 'url': '每週學習進度.html'}, {'title': 'W1', 'text': '1.建立個人倉儲 \xa0 https://github.com/41123130/cd2024 \n 2.下載可攜套件 下載可攜程式環境: portable_2024.7z\xa0 \n 3.下載 miktex-portable.7z \xa0 \n', 'tags': '', 'url': 'W1.html'}, {'title': 'W2', 'text': '1.創建自己的倉儲(cd2024) \n 2.創建自己的 動靜態 並修改內容 \n 3.為了上傳 影片 檔案 照片等 學習了blog寫法 (git add ._ git commit -m ""_ git push) \n', 'tags': '', 'url': 'W2.html'}, {'title': 'W3', 'text': '1.建立小組群組倉儲( https://github.com/mdecd2024/2a-midag2 ) \n 2.建立Putty權限(ppk) \n', 'tags': '', 'url': 'W3.html'}, {'title': 'W4', 'text': '1.cd2024_2a_w2_5 如何利用近端可攜環境與外部 IPv4 開啟動態網站的字幕 \n 2.為教學影片上其影片逐字稿 \n', 'tags': '', 'url': 'W4.html'}, {'title': 'W5', 'text': '1.將自己的倉儲加入小組成為子模組 \n 2.以 LaTeX 格式分工完成文章的英文與中文翻譯並列資料 \n 3.上一部教學影片字幕(HomeWork-1) \n', 'tags': '', 'url': 'W5.html'}, {'title': 'W6', 'text': 'UpDate 了小組中自己的子模組 且學習如何用branch 協同更新 \n 方法如下: 1.在 github main create new branch 和 branch name 41123130 //創建個人分支 2.create a codspeace on 41123130 // 3.open codspeace 4.chmod u+x init_replit 並./init_replit 5.git submodule update --init //將 git submodule init 和 git submodule update 合併成一步 6.cd 41123130 //進入41123130的子模組 7.git pull origin main //從遠端更新程式碼 並將 main 合併至分支41123130 8.cd ..//退到大廳 9.git add .(加入更改) git commit -m " "(命名這次更改) git push(推到倉儲) 10.git merge //合併branch 41123130 至 main 11.在github確定沒衝突的合併後送出請求,並合併branch 12.合併後的branch 只要沒有與main有衝突的合併應該可以一直用 \n', 'tags': '', 'url': 'W6.html'}, {'title': 'W7', 'text': '清明連假休息一週! \n', 'tags': '', 'url': 'W7.html'}, {'title': 'W8', 'text': '運用OBS嘗試加入部分教學成果總結(未成功) \n', 'tags': '', 'url': 'W8.html'}, {'title': 'W9', 'text': '1. 重新整頓之前Blog之問題 2.整合群組子模組 \n', 'tags': '', 'url': 'W9.html'}, {'title': 'W10', 'text': '任務一 \n from browser import window, ajax, document, html\n \ndef fetch_csv_data():\n  # CSV 檔案網址\n  url = "https://mdecd2024.github.io/2astud-2asite/downloads/2a.txt"\n   \n  def on_complete(req):\n    if req.status == 200 or req.status == 0:\n      # 讀取 CSV 檔案內容\n      content = req.text\n   \n      # 依照換行符號拆分資料\n      lines = content.split(\'\\n\')\n   \n      # 建立空列表儲存資料\n      data = []\n   \n      # 遍歷每一行資料\n      for line in lines:\n        # 忽略空白行\n        if line.strip() == "":\n          continue\n   \n        # 依照逗號拆分資料\n        items = line.split(\',\')\n   \n        # 將拆分後的資料加入列表\n        data.append(items)\n       \n      # 必須去除 data 的第一列標題資料, 只取序號為 1 之後的資料\n      data = data[1:]\n   \n      # 取得 html 可以插入的標註位置\n      brython_div = document["brython_div1"]\n      course_title = "cd2024"\n \n      # 逐一處理學員資料\n      index = 0\n      for items in data:\n        index += 1\n        student_id, github_username, group = items\n         \n        if github_username == "":\n          github_username = "000"\n         \n        # 建立網站和倉儲連結，使用正確的模板\n        site_url = f"https://{github_username}.github.io/{course_title}"\n        repo_url = f"https://github.com/{github_username}/{course_title}"\n        group_site_url = f"https://mdecd2024.github.io/2a-midag{group}"\n        group_repo_url = f"https://github.com/mdecd2024/2a-midag{group}"\n \n        # 添加學號, 網站, 倉儲連結和序號到 brython_div\n        brython_div <= str(index) + ". " + html.A(student_id, href=site_url)\n        brython_div <= " ("\n        brython_div <= html.A("repo", href=repo_url)\n        brython_div <= ") | " \n        brython_div <= html.A("Group Site", href=group_site_url)\n        brython_div <= " | "\n        brython_div <= html.A("Group Repo", href=group_repo_url)\n        brython_div <= html.BR()\n \n    else:\n      print("Error:", req.text)\n   \n  # 發送 AJAX 請求\n  req = ajax.ajax()\n  req.bind(\'complete\', on_complete)\n  req.open(\'GET\', url, True)\n  req.set_header(\'content-type\', \'application/x-www-form-urlencoded\')\n  req.send()\n   \n# 呼叫函式讀取 CSV 資料\nfetch_csv_data() \n', 'tags': '', 'url': 'W10.html'}, {'title': 'HomeWork', 'text': '派發作業(盡力完成,爭取通過!) \n', 'tags': '', 'url': 'HomeWork.html'}, {'title': '影片字幕整理', 'text': '\n', 'tags': '', 'url': '影片字幕整理.html'}, {'title': '論文中英對照', 'text': '文章翻譯,txt檔(放置於Github-download) \n \n', 'tags': '', 'url': '論文中英對照.html'}, {'title': 'cmsimde', 'text': "SMap  - SiteMap - 依照階次列出網站的所有頁面. \n EditA  - Edit All page - 將所有頁面放入編輯模式中, 主要用來處理頁面搬遷, 刪除或決定衝突頁面內容版本. \n Edit  - Edit page - 先選擇要編輯的單一頁面後, 再點選 Edit, 即可進入單一頁面的編輯模式. \n Config  - Configure Site - 編輯頁面標題與管理者密碼. \n Search  - 動態頁面內容的關鍵字搜尋. \n IUpload  - Image file Upload - 圖檔的上傳功能, 可以上傳 jpg, png 與 gif 檔案, 其中若在手機上傳圖檔, 系統會自動將圖片檔案縮小為 800x800 大小. \n IList  - Image file List - 列出可以直接在頁面編輯模式中引用的圖片檔案. \n FUpload  - File Upload - 一般檔案的上傳功能, 目前可以上傳的檔案副檔名包括 'jpg', 'png', 'gif', '7z', 'pdf', 'zip', 'ttt', 'stl', 'txt', 'html', 'mp4' 等, 使用者可以自行修改. \n FList  - File List - 列出可以直接在頁面編輯模式中引用的上傳檔案. \n Logout  - 登出頁面編輯模式. \n Convert  - 將動態網站中位於 config/content.htm 檔案, 透過分頁設定轉為 content 目錄中的靜態網頁. \n acp  - git add, git commit 與 git push, 通常只有在 localhost 或自架主機上利用網頁表單協助將倉儲改版內容推向 Github 倉儲. \n SStatic  - Start Static Site - 利用 Python 啟動網站伺服功能, 可以讓使用者檢查轉檔後的靜態網站內容. \n RStatic  - Replit Static Site URL - 僅用於 Replit 模式, 當使用者按下 SStatic 後, 可以按下 RStatic 進入當下尚未推向 Github Pages 的靜態網站. \n 80  - 由 init.py 中 static_port 所決定的連結字串, 一般不使用 80, 只有在 Replit 中為了與動態網站共用 port, 才特別設為 80. \n \n", 'tags': '', 'url': 'cmsimde.html'}, {'title': 'Replit', 'text': 'https://replit.com \n 利用 init_replit 指令安裝所需 Python 模組 chmod u+x init_replit ./init_replit \n On Replit: \n .replit: python3 main.py \n chmod u+x cms init_replit \n ./init_replit \n for cmsimde_site (not needed): git submodule update --init --recursive \n for cmsimde: pip install flask flask_cors bs4 lxml pelican markdown gevent \n password generator:\xa0 https://mde.tw/cmsite/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3abe48554509bbd43d65b6e5c82/hashlib_password_generator.py \xa0 \n \n for IPv6 only Ubuntu: .ssh 目錄中的 config, 將 SSH session 名稱設為 github.com: Host github.com User git Hostname github.com ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p for Replit: .ssh 目錄中的 config, 將 SSH session 名稱設為 github.com: Host github.com User git Hostname github.co #since Replit works for IPv4, therefore no ProxyCommand setting needed #ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p \n \n \n', 'tags': '', 'url': 'Replit.html'}, {'title': 'Brython', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍) \n Variables ( Python Keywords ) \n Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解) \n Numbers  (整數 int(), 浮點數 float()) \n Strings  (字串) \n print (Python 內建函式,  print()  函式) \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'Brython.html'}]};