<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>協同產品設計實習</title><link href="./" rel="alternate"></link><link href="./feeds/all.atom.xml" rel="self"></link><id>./</id><updated>2024-05-16T13:32:47+08:00</updated><entry><title>41123130-W10課程</title><link href="./41123130%20W12.html" rel="alternate"></link><published>2024-05-03T11:00:00+08:00</published><updated>2024-05-16T13:32:47+08:00</updated><author><name>41123130</name></author><id>tag:None,2024-05-03:./41123130 W12.html</id><summary type="html">&lt;p&gt;第十二週&lt;/p&gt;
</summary><content type="html">&lt;p&gt;第十二週&lt;/p&gt;


&lt;h1&gt;41123130-W12&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;利用NXOpen程式分別執行建立block與挖孔，並將兩個程式合併為一個程式，可以直接完成建立一個 block 並在其特定面上挖孔&lt;/li&gt;
&lt;li&gt;將分組倉儲(ag2)設為評分網站(2a-stud)子模組
[git submodule add https://github.com/mdecd2024/2a-midag2.git g1]&lt;/li&gt;
&lt;/ol&gt;</content><category term="w12"></category><category term="網誌編寫"></category></entry><entry><title>41123130-W10課程</title><link href="./41123130%20W11.html" rel="alternate"></link><published>2024-04-26T11:00:00+08:00</published><updated>2024-05-16T13:20:13+08:00</updated><author><name>41123130</name></author><id>tag:None,2024-04-26:./41123130 W11.html</id><summary type="html">&lt;p&gt;第十一週&lt;/p&gt;
</summary><content type="html">&lt;p&gt;第十一週&lt;/p&gt;


&lt;h1&gt;41123130-W11&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;在小組倉儲更新自己的子模組&lt;/li&gt;
&lt;li&gt;學習並練習使用建分支的方式去維護小組倉儲&lt;/li&gt;
&lt;li&gt;用NX畫鋼球平衡零件圖&lt;/li&gt;
&lt;/ol&gt;</content><category term="w11"></category><category term="網誌編寫"></category></entry><entry><title>41123130-W10課程</title><link href="./41123130%20W10.html" rel="alternate"></link><published>2024-04-19T11:00:00+08:00</published><updated>2024-05-16T13:20:08+08:00</updated><author><name>41123130</name></author><id>tag:None,2024-04-19:./41123130 W10.html</id><summary type="html">&lt;p&gt;第十週&lt;/p&gt;
</summary><content type="html">&lt;p&gt;第十週&lt;/p&gt;


&lt;h1&gt;41123130-W10&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;完成Latex翻譯並上傳至Downloads中&lt;/li&gt;
&lt;li&gt;將W10任務放在&lt;a href="https://41123130.github.io/cd2024/content/W10.html"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="w10"></category><category term="網誌編寫"></category></entry><entry><title>41123130-W9課程</title><link href="./41123130%20W9.html" rel="alternate"></link><published>2024-04-12T11:00:00+08:00</published><updated>2024-05-10T05:17:13+08:00</updated><author><name>41123130</name></author><id>tag:None,2024-04-12:./41123130 W9.html</id><summary type="html">&lt;p&gt;第九週&lt;/p&gt;
</summary><content type="html">&lt;p&gt;第九週&lt;/p&gt;


&lt;h1&gt;41123130-W9&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;重新整頓之前Blog之問題&lt;/li&gt;
&lt;li&gt;整合群組子模組&lt;/li&gt;
&lt;/ol&gt;</content><category term="w9"></category><category term="網誌編寫"></category></entry><entry><title>41123130-W8課程</title><link href="./41123130%20W8.html" rel="alternate"></link><published>2024-04-05T11:00:00+08:00</published><updated>2024-05-07T12:02:34+08:00</updated><author><name>41123130</name></author><id>tag:None,2024-04-05:./41123130 W8.html</id><summary type="html">&lt;p&gt;第八週&lt;/p&gt;
</summary><content type="html">&lt;p&gt;第八週&lt;/p&gt;


&lt;h1&gt;41123130-W8&lt;/h1&gt;
&lt;p&gt;運用OBS嘗試加入部分教學成果總結(未成功)&lt;/p&gt;</content><category term="w8"></category><category term="網誌編寫"></category></entry><entry><title>41123130-W6課程</title><link href="./41123130%20W6.html" rel="alternate"></link><published>2024-03-29T11:00:00+08:00</published><updated>2024-05-07T12:02:11+08:00</updated><author><name>41123130</name></author><id>tag:None,2024-03-29:./41123130 W6.html</id><summary type="html">&lt;p&gt;第六週&lt;/p&gt;
</summary><content type="html">&lt;p&gt;第六週&lt;/p&gt;


&lt;h1&gt;41123130-W6&lt;/h1&gt;
&lt;p&gt;UpDate 了小組中自己的子模組 且學習如何用branch 協同更新&lt;/p&gt;
&lt;p&gt;方法如下:
1.在 github main create new branch 和 branch name 41123130 //創建個人分支
2.create a codspeace on 41123130 //
3.open codspeace
4.chmod u+x init_replit 並./init_replit
5.git submodule update --init //將 git submodule init 和 git submodule update 合併成一步
6.cd 41123130 //進入41123130的子模組
7.git pull origin main //從遠端更新程式碼 並將 main 合併至分支41123130
8.cd ..//退到大廳
9.git add .(加入更改) git commit -m " "(命名這次更改) git push(推到倉儲)
10.git merge //合併branch 41123130 至 main
11.在github確定沒衝突的合併後送出請求,並合併branch
12.合併後的branch 只要沒有與main有衝突的合併應該可以一直用&lt;/p&gt;</content><category term="w6"></category><category term="網誌編寫"></category></entry><entry><title>41123130-W5課程</title><link href="./41123130%20W5.html" rel="alternate"></link><published>2024-03-22T11:00:00+08:00</published><updated>2024-05-07T12:04:34+08:00</updated><author><name>41123130</name></author><id>tag:None,2024-03-22:./41123130 W5.html</id><summary type="html">&lt;p&gt;第五週&lt;/p&gt;
</summary><content type="html">&lt;p&gt;第五週&lt;/p&gt;


&lt;h1&gt;41123130-W5&lt;/h1&gt;
&lt;p&gt;1.將自己的倉儲加入小組成為子模組&lt;/p&gt;
&lt;p&gt;2.以 LaTeX 格式分工完成文章的英文與中文翻譯並列資料&lt;/p&gt;
&lt;p&gt;3.上一部教學影片字幕&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/WpBjO-Pjr5w?si=8z-aQCzjtIiF1gy3" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="&lt;a href="https://1drv.ms/t/c/0c784ce0af12d934/EQ7fGtx45HxBiJpdMZMJnkABtKQ5YcusSXGq3WgBcceKJg?e=K5pVot"&gt;http://229.cycu.org/latex_images_github.7z&lt;/a&gt;"&gt;逐字稿&lt;/a&gt;&lt;/p&gt;</content><category term="w5"></category><category term="網誌編寫"></category></entry><entry><title>41123130-W4課程</title><link href="./41123130%20W4.html" rel="alternate"></link><published>2024-03-15T11:00:00+08:00</published><updated>2024-05-07T12:01:55+08:00</updated><author><name>41123130</name></author><id>tag:None,2024-03-15:./41123130 W4.html</id><summary type="html">&lt;p&gt;第四週&lt;/p&gt;
</summary><content type="html">&lt;p&gt;第四週&lt;/p&gt;


&lt;h1&gt;41123130-W4&lt;/h1&gt;
&lt;p&gt;1.cd2024_2a_w2_5 如何利用近端可攜環境與外部 IPv4 開啟動態網站的字幕&lt;/p&gt;
&lt;p&gt;2.為教學影片上其影片逐字稿&lt;/p&gt;</content><category term="w4"></category><category term="網誌編寫"></category></entry><entry><title>41123130-W3課程</title><link href="./41123130%20W3.html" rel="alternate"></link><published>2024-03-08T11:00:00+08:00</published><updated>2024-05-07T12:01:50+08:00</updated><author><name>41123130</name></author><id>tag:None,2024-03-08:./41123130 W3.html</id><summary type="html">&lt;p&gt;第三週&lt;/p&gt;
</summary><content type="html">&lt;p&gt;第三週&lt;/p&gt;


&lt;h1&gt;41123130-W3&lt;/h1&gt;
&lt;p&gt;1.建立小組群組倉儲(https://github.com/mdecd2024/2a-midag2)&lt;/p&gt;
&lt;p&gt;2.建立Putty權限(ppk)&lt;/p&gt;</content><category term="w3"></category><category term="網誌編寫"></category></entry><entry><title>41123130-W2課程</title><link href="./41123130%20W2.html" rel="alternate"></link><published>2024-03-01T11:00:00+08:00</published><updated>2024-05-07T12:01:42+08:00</updated><author><name>41123130</name></author><id>tag:None,2024-03-01:./41123130 W2.html</id><summary type="html">&lt;p&gt;第二週&lt;/p&gt;
</summary><content type="html">&lt;p&gt;第二週&lt;/p&gt;


&lt;h1&gt;41123130-W2&lt;/h1&gt;
&lt;p&gt;1.創建自己的倉儲(cd2024) &lt;/p&gt;
&lt;p&gt;2.創建自己的動靜態並修改內容&lt;/p&gt;
&lt;p&gt;3.為了上傳 影片 檔案 照片等 學習了blog寫法
(git add .&lt;em&gt; git commit -m ""&lt;/em&gt; git push)&lt;/p&gt;</content><category term="w2"></category><category term="網誌編寫"></category></entry><entry><title>41123130-W1課程</title><link href="./41123130%20W1.html" rel="alternate"></link><published>2024-02-23T11:00:00+08:00</published><updated>2024-05-07T12:01:08+08:00</updated><author><name>41123130</name></author><id>tag:None,2024-02-23:./41123130 W1.html</id><summary type="html">&lt;p&gt;第一週&lt;/p&gt;
</summary><content type="html">&lt;p&gt;第一週&lt;/p&gt;


&lt;h1&gt;41123130-W1&lt;/h1&gt;
&lt;p&gt;建立個人倉儲
https://github.com/41123130/cd2024&lt;/p&gt;
&lt;p&gt;下載可攜套件
下載可攜程式環境: portable_2024.7z (需要密碼, 下載 540MB, 解開壓縮後約 1.8GB)&lt;/p&gt;
&lt;p&gt;下載 miktex-portable.7z (需要密碼, 下載 167MB, 解開壓縮檔案後約 1GB)&lt;/p&gt;
&lt;p&gt;設定 Github 帳號的雙重認證
說明如何設定 Github 雙重認證, 其中手機必須先安裝 Github Mobile, 也可以使用 Authy App 作為認證套件, 一旦在 Github 帳號下的 Setting 中的 Password and authentication 啟用雙重認證, 最後必須下載對應的 Recovery codes 並存入隨身碟, 而且要寄到個人的電子郵箱.&lt;/p&gt;
&lt;p&gt;設定網誌&lt;/p&gt;
&lt;p&gt;使用者可以自行利用 &lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; 倉儲作為 Template, 建立自己的網站內容管理系統.&lt;/p&gt;
&lt;p&gt;引用網站網址連結的方法:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; - 在文章中多次引用同一個網站連結時, 可以使用此種方法.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;https://github.com/mdecycu/cmsimde_site&lt;/a&gt; - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; - 也可以使用 Markdown 的標準網站連結使用格式.&lt;/p&gt;
&lt;pre class="brush: python"&gt;
# 引用 Python 程式的方法
for i in range(10):
    print(i, "列出字串")
&lt;/pre&gt;

&lt;p&gt;也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼.&lt;/p&gt;
&lt;p&gt;從 1 累加到 100:&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100"&gt;1 add to 100&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;將 iterable 與 iterator &lt;a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438"&gt;相關說明&lt;/a&gt;, 利用 Brython 與 Ace Editor 整理在這個頁面.&lt;/p&gt;
&lt;!-- 導入 brython 程式庫 --&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/brython.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/brython_stdlib.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;!-- 啟動 Brython --&gt;
&lt;p&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['./../cmsimde/static/','./../downloads/py/']});
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 FileSaver 與 filereader --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/FileSaver.min.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/filereader.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 ace --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/ace.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/ext-language_tools.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/mode-python3.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/snippets/python.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 --&gt;
&lt;script src="./../cmsimde/static/Cango-24v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/gearUtils-09.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/SVGpathUtils-6v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/sylvester.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/PrairieDraw.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/javascript"&gt;
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 結束--&gt;&lt;/p&gt;
&lt;!-- editor1 開始 --&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor1" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run1"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console1"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console1"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd1"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console1"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;&lt;/p&gt;
&lt;div id="brython_div1"&gt;&lt;/div&gt;
&lt;!-- editor1 結束 --&gt;
&lt;hr/&gt;&lt;!-- ########################################## --&gt;&lt;p&gt;從 1 累加到 100 part2:&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100part2"&gt;1 add to 100&lt;/button&gt;&lt;button id="cango_three_gears"&gt;cango_three_gears&lt;/button&gt;&lt;button id="bsnake"&gt;BSnake&lt;/button&gt;&lt;button id="aitetris"&gt;AI Tetris&lt;/button&gt;&lt;button id="threejsblock"&gt;Rotating Block&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 part2 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 part2 結束--&gt;&lt;/p&gt;
&lt;!-- editor2 開始 --&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor2" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename2" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run2"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console2"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console2"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd2"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console2"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;&lt;/p&gt;
&lt;div id="brython_div2"&gt;&lt;/div&gt;
&lt;!-- editor2 結束 --&gt;
&lt;hr/&gt;&lt;p&gt;
&lt;script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"&gt;&lt;/script&gt;</content><category term="w1"></category><category term="網誌編寫"></category></entry></feed>